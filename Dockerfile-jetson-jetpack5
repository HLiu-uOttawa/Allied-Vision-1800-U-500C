FROM ultralytics/ultralytics:8.2.103-jetson-jetpack5

# Prevent Python from writing .pyc files
ENV PYTHONDONTWRITEBYTECODE=true

# Define workspace path
ENV WORKSPACE_PATH=/root/workspace
WORKDIR ${WORKSPACE_PATH}

# Copy installation package and application files
COPY VimbaX_Setup-2024-1-Linux_ARM64.tar.gz .
COPY ./app ./app

# Install necessary utilities and clean up package lists
RUN apt update && \
    apt install -y usbutils vim && \
    rm -rf /var/lib/apt/lists/*

# Upgrade pip and remove cache
RUN python3 -m pip install --upgrade pip --no-cache-dir

# Extract and install VimbaX, then remove the installation package to save space
RUN tar -xzf VimbaX_Setup-2024-1-Linux_ARM64.tar.gz -C /opt && \
    mv /opt/VimbaX_2024-1 /opt/VimbaX && \
    rm VimbaX_Setup-2024-1-Linux_ARM64.tar.gz

# Run VimbaX installation script
WORKDIR /opt/VimbaX/cti
RUN ./Install_GenTL_Path.sh

# Install Python dependencies
WORKDIR /opt/VimbaX/api/python
RUN pip3 install vmbpy-1.0.5-py3-none-any.whl --no-cache-dir

# Set environment variables for VimbaX
ENV GENICAM_GENTL64_PATH="/opt/VimbaX/cti"

# Set workspace as the default working directory
WORKDIR ${WORKSPACE_PATH}

# Optional: Set the default entry point if running a Python application
# ENTRYPOINT ["python", "app/main.py"]

#            && rm VimbaX_Setup-2024-1-Linux_ARM64.tar.gz \

#            && mkdir -p /etc/udev/rules.d \
#            && cd /opt/VimbaX/VimbaUSBTL/ \
#            && ./Install.sh \
#            && cd ../VimbaPython/Source/ \
#            && python -m pip install . \
#            && cd .. \
#            && rm -rf VimbaGigETL \
#            && rm -rf VimbaCPP \
#            && rm -rf /opt/VimbaX/VimbaC/DynamicLib/x86_32bit \
#            && rm -rf /opt/VimbaX/VimbaCPP/DynamicLib/x86_32bit \
#            && rm -rf /opt/VimbaX/VimbaImageTransform/DynamicLib/x86_32bit \
#            && rm -rf /opt/VimbaX/Tools/Viewer \
#            && rm -rf /opt/VimbaX/Tools/VimbaClassGenerator/Bin/x86_32bit \
#            && rm -rf /opt/VimbaX/Tools/FirmwareUpdater/Bin/x86_32bit \
#            && rm -rf /opt/VimbaX/VimbaC/Examples/Bin/x86_32bit \
#            && rm -rf /opt/VimbaX/VimbaCPP/Examples/Bin/x86_32bit \
#            && rm -rf /opt/VimbaX/VimbaUSBTL/CTI/x86_32bit \
#            && rm -rf /opt/VimbaX/VimbaGigETL/CTI/x86_32bit

#

#
#ENTRYPOINT  ["python"]